load("@chameleon//:bazel/build_settings.bzl", "gc_switch")

gc_switch(
    name = "gc",
    build_setting_default = "enable",
)

config_setting(
    name = "with_gc",
    flag_values = {
        ":gc" : "enable",
    }
)

config_setting(
    name = "without_gc",
    flag_values = {
        ":gc" : "disable",
    }
)

cc_library(
    name = "chameleon",
    srcs = ["//src/Base:base_srcs",
            "//src/Parser:parser_source",
            "//src/Parser:external_parser_src",
            "//src:utility_src",
            "//src:refl_src",
            "//src/Base/Concepts:concepts_srcs",
            "//src/Misc/testLanguage:testLang_parser_srcs",
            "//src/Api:api_srcs",
            "//src/TransEngine/Rewrite:rewrite_srcs",
            "//src/TransEngine/TransLang:chameleons_parser_srcs",
            "//src/TransEngine/TransLang:chameleons_compiler_srcs",
            "//src/TransEngine:pattern_matching",
            "//src/Analysis:analyzer_src",
            ],
    hdrs = ["//src/Base:base_hdrs",
            "//src/Parser:parser_hdrs",
            "//src/Parser:external_parser_hdrs",
            "//src:utility_hdrs",
            "//src:refl_src",
            "//src/Base/Concepts:concepts_srcs",
            "//src/Api:api_srcs",
            "//src/TransEngine/Rewrite:rewrite_hdrs",
            "//src/Analysis:analyzer_src",
            "//src/TransEngine:pattern_matching",
            ],
    deps  = ["@antlr4_runtime//:antlr4_runtime",
             "@com_google_googletest//:gtest_main",
             "//parsers:wgsl_parser",
             "@rapidcheck//:rapidcheck",
             "@plog//:plog",
            ] + select({
                "with_gc"    : ["@oilpan//:cppgc"],
                "without_gc" : [],
            }),
    copts = select({
        "with_gc"    : ["-DENABLE_GC=true"],
        "without_gc" : ["-DENABLE_GC=false"],
    }),
    includes = ["src"],
    visibility = ["//visibility:public"]
)
